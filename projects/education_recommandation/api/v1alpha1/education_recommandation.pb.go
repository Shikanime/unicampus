// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1alpha1/education_recommandation.proto

package education_api_v1alpha1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import encoding_binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Critera struct {
	Sector               string   `protobuf:"bytes,1,opt,name=sector,proto3" json:"sector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Critera) Reset()         { *m = Critera{} }
func (m *Critera) String() string { return proto.CompactTextString(m) }
func (*Critera) ProtoMessage()    {}
func (*Critera) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{0}
}
func (m *Critera) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Critera) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Critera.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Critera) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Critera.Merge(dst, src)
}
func (m *Critera) XXX_Size() int {
	return m.Size()
}
func (m *Critera) XXX_DiscardUnknown() {
	xxx_messageInfo_Critera.DiscardUnknown(m)
}

var xxx_messageInfo_Critera proto.InternalMessageInfo

func (m *Critera) GetSector() string {
	if m != nil {
		return m.Sector
	}
	return ""
}

type School struct {
	UUID                 string      `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Phone                string      `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string      `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Pictures             []*Link     `protobuf:"bytes,6,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Regions              []*Link     `protobuf:"bytes,7,rep,name=regions,proto3" json:"regions,omitempty"`
	Locations            []*Location `protobuf:"bytes,8,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *School) Reset()         { *m = School{} }
func (m *School) String() string { return proto.CompactTextString(m) }
func (*School) ProtoMessage()    {}
func (*School) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{1}
}
func (m *School) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *School) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_School.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *School) XXX_Merge(src proto.Message) {
	xxx_messageInfo_School.Merge(dst, src)
}
func (m *School) XXX_Size() int {
	return m.Size()
}
func (m *School) XXX_DiscardUnknown() {
	xxx_messageInfo_School.DiscardUnknown(m)
}

var xxx_messageInfo_School proto.InternalMessageInfo

func (m *School) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *School) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *School) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *School) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *School) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *School) GetPictures() []*Link {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *School) GetRegions() []*Link {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *School) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type Link struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Reference            string   `protobuf:"bytes,2,opt,name=Reference,proto3" json:"Reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{2}
}
func (m *Link) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Link.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(dst, src)
}
func (m *Link) XXX_Size() int {
	return m.Size()
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Link) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Location struct {
	Address              string    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	GeoPoint             *GeoPoint `protobuf:"bytes,2,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Region               *Region   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{3}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Location.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return m.Size()
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Location) GetGeoPoint() *GeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *Location) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type GeoPoint struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeoPoint) Reset()         { *m = GeoPoint{} }
func (m *GeoPoint) String() string { return proto.CompactTextString(m) }
func (*GeoPoint) ProtoMessage()    {}
func (*GeoPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{4}
}
func (m *GeoPoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GeoPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GeoPoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GeoPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoPoint.Merge(dst, src)
}
func (m *GeoPoint) XXX_Size() int {
	return m.Size()
}
func (m *GeoPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoPoint.DiscardUnknown(m)
}

var xxx_messageInfo_GeoPoint proto.InternalMessageInfo

func (m *GeoPoint) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeoPoint) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Region struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Zipcode              string   `protobuf:"bytes,4,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_education_recommandation_9a1a382685fdb519, []int{5}
}
func (m *Region) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Region.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(dst, src)
}
func (m *Region) XXX_Size() int {
	return m.Size()
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Region) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Region) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Region) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func init() {
	proto.RegisterType((*Critera)(nil), "education.api.v1alpha1.Critera")
	proto.RegisterType((*School)(nil), "education.api.v1alpha1.School")
	proto.RegisterType((*Link)(nil), "education.api.v1alpha1.Link")
	proto.RegisterType((*Location)(nil), "education.api.v1alpha1.Location")
	proto.RegisterType((*GeoPoint)(nil), "education.api.v1alpha1.GeoPoint")
	proto.RegisterType((*Region)(nil), "education.api.v1alpha1.Region")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EducationRecommandationServiceClient is the client API for EducationRecommandationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EducationRecommandationServiceClient interface {
	ListSchoolsByCritera(ctx context.Context, in *Critera, opts ...grpc.CallOption) (EducationRecommandationService_ListSchoolsByCriteraClient, error)
}

type educationRecommandationServiceClient struct {
	cc *grpc.ClientConn
}

func NewEducationRecommandationServiceClient(cc *grpc.ClientConn) EducationRecommandationServiceClient {
	return &educationRecommandationServiceClient{cc}
}

func (c *educationRecommandationServiceClient) ListSchoolsByCritera(ctx context.Context, in *Critera, opts ...grpc.CallOption) (EducationRecommandationService_ListSchoolsByCriteraClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EducationRecommandationService_serviceDesc.Streams[0], "/education.api.v1alpha1.EducationRecommandationService/ListSchoolsByCritera", opts...)
	if err != nil {
		return nil, err
	}
	x := &educationRecommandationServiceListSchoolsByCriteraClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EducationRecommandationService_ListSchoolsByCriteraClient interface {
	Recv() (*School, error)
	grpc.ClientStream
}

type educationRecommandationServiceListSchoolsByCriteraClient struct {
	grpc.ClientStream
}

func (x *educationRecommandationServiceListSchoolsByCriteraClient) Recv() (*School, error) {
	m := new(School)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EducationRecommandationServiceServer is the server API for EducationRecommandationService service.
type EducationRecommandationServiceServer interface {
	ListSchoolsByCritera(*Critera, EducationRecommandationService_ListSchoolsByCriteraServer) error
}

func RegisterEducationRecommandationServiceServer(s *grpc.Server, srv EducationRecommandationServiceServer) {
	s.RegisterService(&_EducationRecommandationService_serviceDesc, srv)
}

func _EducationRecommandationService_ListSchoolsByCritera_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Critera)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EducationRecommandationServiceServer).ListSchoolsByCritera(m, &educationRecommandationServiceListSchoolsByCriteraServer{stream})
}

type EducationRecommandationService_ListSchoolsByCriteraServer interface {
	Send(*School) error
	grpc.ServerStream
}

type educationRecommandationServiceListSchoolsByCriteraServer struct {
	grpc.ServerStream
}

func (x *educationRecommandationServiceListSchoolsByCriteraServer) Send(m *School) error {
	return x.ServerStream.SendMsg(m)
}

var _EducationRecommandationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "education.api.v1alpha1.EducationRecommandationService",
	HandlerType: (*EducationRecommandationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListSchoolsByCritera",
			Handler:       _EducationRecommandationService_ListSchoolsByCritera_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/v1alpha1/education_recommandation.proto",
}

func (m *Critera) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Critera) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Sector) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Sector)))
		i += copy(dAtA[i:], m.Sector)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *School) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *School) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UUID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.UUID)))
		i += copy(dAtA[i:], m.UUID)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Pictures) > 0 {
		for _, msg := range m.Pictures {
			dAtA[i] = 0x32
			i++
			i = encodeVarintEducationRecommandation(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Regions) > 0 {
		for _, msg := range m.Regions {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintEducationRecommandation(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Locations) > 0 {
		for _, msg := range m.Locations {
			dAtA[i] = 0x42
			i++
			i = encodeVarintEducationRecommandation(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Link) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Link) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Reference) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Reference)))
		i += copy(dAtA[i:], m.Reference)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Location) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Location) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.GeoPoint != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(m.GeoPoint.Size()))
		n1, err := m.GeoPoint.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Region != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(m.Region.Size()))
		n2, err := m.Region.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GeoPoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GeoPoint) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Latitude != 0 {
		dAtA[i] = 0x9
		i++
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i += 8
	}
	if m.Longitude != 0 {
		dAtA[i] = 0x11
		i++
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i += 8
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Region) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Region) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.City) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.City)))
		i += copy(dAtA[i:], m.City)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	if len(m.Country) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Country)))
		i += copy(dAtA[i:], m.Country)
	}
	if len(m.Zipcode) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintEducationRecommandation(dAtA, i, uint64(len(m.Zipcode)))
		i += copy(dAtA[i:], m.Zipcode)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintEducationRecommandation(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Critera) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sector)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *School) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if len(m.Pictures) > 0 {
		for _, e := range m.Pictures {
			l = e.Size()
			n += 1 + l + sovEducationRecommandation(uint64(l))
		}
	}
	if len(m.Regions) > 0 {
		for _, e := range m.Regions {
			l = e.Size()
			n += 1 + l + sovEducationRecommandation(uint64(l))
		}
	}
	if len(m.Locations) > 0 {
		for _, e := range m.Locations {
			l = e.Size()
			n += 1 + l + sovEducationRecommandation(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Link) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Reference)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Location) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.Region != nil {
		l = m.Region.Size()
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GeoPoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Latitude != 0 {
		n += 9
	}
	if m.Longitude != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Region) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	l = len(m.Zipcode)
	if l > 0 {
		n += 1 + l + sovEducationRecommandation(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEducationRecommandation(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozEducationRecommandation(x uint64) (n int) {
	return sovEducationRecommandation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Critera) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Critera: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Critera: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *School) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: School: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: School: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pictures", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pictures = append(m.Pictures, &Link{})
			if err := m.Pictures[len(m.Pictures)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Regions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Regions = append(m.Regions, &Link{})
			if err := m.Regions[len(m.Regions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locations = append(m.Locations, &Location{})
			if err := m.Locations[len(m.Locations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Link) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Link: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Link: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reference", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reference = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Location) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Location: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Location: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &GeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Region == nil {
				m.Region = &Region{}
			}
			if err := m.Region.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GeoPoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GeoPoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GeoPoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Region) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Region: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Region: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Zipcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Zipcode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEducationRecommandation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEducationRecommandation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEducationRecommandation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEducationRecommandation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEducationRecommandation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthEducationRecommandation
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowEducationRecommandation
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipEducationRecommandation(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthEducationRecommandation = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEducationRecommandation   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("api/v1alpha1/education_recommandation.proto", fileDescriptor_education_recommandation_9a1a382685fdb519)
}

var fileDescriptor_education_recommandation_9a1a382685fdb519 = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x8a, 0x13, 0x4b,
	0x14, 0x7d, 0x9d, 0xc9, 0x74, 0x3a, 0x37, 0x9b, 0x47, 0x39, 0x0e, 0x4d, 0x0c, 0x6d, 0xec, 0xd5,
	0x80, 0xd0, 0x6d, 0x22, 0x0c, 0xb3, 0xd1, 0xc5, 0x38, 0x22, 0xc2, 0x2c, 0xa4, 0xc7, 0x59, 0x87,
	0xb2, 0xba, 0xa6, 0x53, 0xd8, 0xa9, 0x6a, 0xaa, 0x2a, 0x81, 0xb8, 0xf4, 0x17, 0xdc, 0x0c, 0xf8,
	0x13, 0x7e, 0x86, 0x4b, 0xc1, 0x1f, 0x90, 0xe8, 0x87, 0x48, 0x55, 0x75, 0x25, 0x0a, 0x46, 0xdc,
	0xdd, 0x73, 0xef, 0x39, 0x27, 0xb9, 0xa7, 0x6f, 0xc1, 0x43, 0xdc, 0xb0, 0x7c, 0x35, 0xc1, 0x75,
	0x33, 0xc7, 0x93, 0x9c, 0x96, 0x4b, 0x82, 0x35, 0x13, 0x7c, 0x26, 0x29, 0x11, 0x8b, 0x05, 0xe6,
	0xa5, 0x85, 0x59, 0x23, 0x85, 0x16, 0xe8, 0x78, 0x3b, 0xcf, 0x70, 0xc3, 0x32, 0x2f, 0x1b, 0x8e,
	0x2a, 0x21, 0xaa, 0x9a, 0xe6, 0xc6, 0x0b, 0x73, 0x2e, 0xb4, 0xe5, 0x28, 0xa7, 0x4a, 0x1f, 0x40,
	0xef, 0x99, 0x64, 0x9a, 0x4a, 0x8c, 0x8e, 0x21, 0x54, 0x94, 0x68, 0x21, 0xe3, 0x60, 0x1c, 0x9c,
	0xf4, 0x8b, 0x16, 0xa5, 0x9f, 0x3a, 0x10, 0x5e, 0x91, 0xb9, 0x10, 0x35, 0x42, 0xd0, 0xbd, 0xbe,
	0x7e, 0x79, 0xd1, 0x12, 0x6c, 0x6d, 0x7a, 0x1c, 0x2f, 0x68, 0xdc, 0x71, 0x3d, 0x53, 0xa3, 0x31,
	0x0c, 0x4a, 0xaa, 0x88, 0x64, 0x8d, 0xf9, 0xad, 0xf8, 0xc0, 0x8e, 0x7e, 0x6d, 0xa1, 0x23, 0x38,
	0x6c, 0xe6, 0x82, 0xd3, 0xb8, 0x6b, 0x67, 0x0e, 0x98, 0x2e, 0x5d, 0x60, 0x56, 0xc7, 0x87, 0xae,
	0x6b, 0x01, 0x3a, 0x83, 0xa8, 0x61, 0x44, 0x2f, 0x25, 0x55, 0x71, 0x38, 0x3e, 0x38, 0x19, 0x4c,
	0x47, 0xd9, 0x9f, 0x97, 0xcd, 0x2e, 0x19, 0x7f, 0x5b, 0x6c, 0xd9, 0xe8, 0x14, 0x7a, 0x92, 0x56,
	0x66, 0xdd, 0xb8, 0xf7, 0x0f, 0x42, 0x4f, 0x46, 0x4f, 0xa1, 0x5f, 0x0b, 0x47, 0x53, 0x71, 0x64,
	0x95, 0xe3, 0xbd, 0xca, 0x96, 0x58, 0xec, 0x24, 0xe9, 0x19, 0x74, 0x8d, 0xa1, 0xc9, 0xe6, 0xf5,
	0xba, 0xa1, 0x3e, 0x2f, 0x53, 0xa3, 0x11, 0xf4, 0x0b, 0x7a, 0x43, 0x25, 0xe5, 0xc4, 0x87, 0xb6,
	0x6b, 0xa4, 0x1f, 0x03, 0x88, 0xbc, 0x23, 0x8a, 0xa1, 0x87, 0xcb, 0x52, 0x52, 0xa5, 0x5a, 0x07,
	0x0f, 0xd1, 0x13, 0xe8, 0x57, 0x54, 0xcc, 0x1a, 0xc1, 0xb8, 0xb6, 0x26, 0x7f, 0xf9, 0x83, 0x2f,
	0xa8, 0x78, 0x65, 0x78, 0x45, 0x54, 0xb5, 0x15, 0x3a, 0x85, 0xd0, 0xad, 0x6a, 0x3f, 0xcd, 0x60,
	0x9a, 0xec, 0xd3, 0x16, 0x96, 0x55, 0xb4, 0xec, 0xf4, 0x02, 0x22, 0xef, 0x86, 0x86, 0x10, 0xd5,
	0x58, 0x33, 0xbd, 0x2c, 0xdd, 0x7e, 0x41, 0xb1, 0xc5, 0x66, 0xc7, 0x5a, 0xf0, 0xca, 0x0d, 0x3b,
	0x76, 0xb8, 0x6b, 0xa4, 0x37, 0x10, 0x3a, 0x5f, 0x93, 0x0f, 0x61, 0x7a, 0xed, 0xf3, 0x31, 0xb5,
	0xb9, 0x01, 0xa5, 0xb1, 0xf6, 0xd9, 0x38, 0x60, 0xa2, 0x20, 0x62, 0xc9, 0xb5, 0x5c, 0xb7, 0xd7,
	0xe4, 0xa1, 0x99, 0xbc, 0x63, 0x0d, 0x11, 0xa5, 0xbf, 0x25, 0x0f, 0xa7, 0xb7, 0x01, 0x24, 0xcf,
	0xfd, 0x5e, 0xc5, 0x6f, 0x6f, 0xe6, 0x8a, 0xca, 0x15, 0x23, 0x14, 0xad, 0xe0, 0xe8, 0x92, 0x29,
	0xed, 0xce, 0x5b, 0x9d, 0xaf, 0xfd, 0x5b, 0xb8, 0xbf, 0x2f, 0x90, 0x96, 0x30, 0xdc, 0x9b, 0x98,
	0xb3, 0x4a, 0xef, 0xbd, 0xff, 0xfa, 0xe3, 0x43, 0xe7, 0x2e, 0xba, 0x93, 0xaf, 0x26, 0xb9, 0xb2,
	0xbd, 0x7c, 0x46, 0x9c, 0xf8, 0x51, 0x70, 0xfe, 0xff, 0xe7, 0x4d, 0x12, 0x7c, 0xd9, 0x24, 0xc1,
	0xb7, 0x4d, 0x12, 0xdc, 0x7e, 0x4f, 0xfe, 0x7b, 0x13, 0xda, 0xf7, 0xf8, 0xf8, 0x67, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x45, 0x7d, 0x44, 0x56, 0xf4, 0x03, 0x00, 0x00,
}
